/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6.1/userguide/tutorial_java_projects.html
 */


plugins {

    id 'java-library'
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    id "com.github.kt3k.coveralls" version "2.10.2"
    
    id 'jacoco'

}

run{
    standardInput = System.in
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testCompileOnly 'junit:junit:4.13'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine'
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'
    compile group: 'org.jline', name: 'jline-terminal-jna', version: '3.16.0'
    compile 'org.jline:jline:3.14.1'
    classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:0.2.5'
}

application {
    // Define the main class for the application.
    mainClassName = 'UMLEditor'
}

jar {
    manifest {
        attributes (
          'UMLEditor' : 'UML.UMLEditor'
        )
    }
}

test {
  useJUnitPlatform()
  testLogging {
    events "passed", "skipped", "failed"
  }
  finalizedBy jacocoTestReport // report is always generated after tests run
}

sourceSets {
  main {
    java {
      srcDir 'src/main/java'
    }
  }

  test {
    java {
      srcDir 'src/test/java'
    }
  }
}

jacoco {
    reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}
